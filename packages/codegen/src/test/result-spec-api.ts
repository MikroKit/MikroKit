/* ######## THIS CODE IS AUTOMATICALLY GENERATED BY MIKROKIT ROUTER, DO NOT MDIFY ######## */
import type {myApi} from './myApi.routes';
function fakeHandlerError() {
    throw new Error('handlers can not be called directly!');
}
export const routesProcedures = {
    auth: {
        isRoute: false,
        canReturnData: false,
        inHeader: false,
        fieldName: 'auth',
        handlerType: fakeHandlerError as any as typeof myApi.auth.handlerType,
        enableValidation: true,
        enableSerialization: true,
        params: ['app', 'ctx', 'token'],
    },
    users: {
        getUser: {
            isRoute: true,
            canReturnData: true,
            path: '/v1/users/getUser',
            inHeader: false,
            handlerType: fakeHandlerError as any as typeof myApi.users.getUser.handlerType,
            enableValidation: true,
            enableSerialization: true,
            params: ['app', 'ctx', 'id'],
        },
        setUser: {
            isRoute: true,
            canReturnData: true,
            path: '/v1/users/setUser',
            inHeader: false,
            handlerType: fakeHandlerError as any as typeof myApi.users.setUser.handlerType,
            enableValidation: true,
            enableSerialization: true,
            params: ['app', 'ctx', 'user', 'user2'],
        },
        totalUsers: {
            isRoute: false,
            canReturnData: true,
            inHeader: false,
            fieldName: 'totalUsers',
            handlerType: fakeHandlerError as any as typeof myApi.users.totalUsers.handlerType,
            enableValidation: true,
            enableSerialization: true,
            params: [],
        },
    },
    pets: {
        getPet: {
            isRoute: true,
            canReturnData: true,
            path: '/v1/pets/getPet',
            inHeader: false,
            handlerType: fakeHandlerError as any as typeof myApi.pets.getPet.handlerType,
            enableValidation: true,
            enableSerialization: true,
            params: ['app', 'ctx', 'id'],
        },
        setPet: {
            isRoute: true,
            canReturnData: true,
            path: '/v1/pets/setPet',
            inHeader: false,
            handlerType: fakeHandlerError as any as typeof myApi.pets.setPet.handlerType,
            enableValidation: true,
            enableSerialization: true,
            params: ['app', 'ctx', 'pet'],
        },
    },
    getNumber: {
        isRoute: true,
        canReturnData: true,
        path: '/v1/utils/getNumber',
        inHeader: false,
        handlerType: fakeHandlerError as any as typeof myApi.getNumber.handlerType,
        enableValidation: true,
        enableSerialization: true,
        params: ['app', 'ctx', 's', 'n'],
    },
    getItem: {
        isRoute: true,
        canReturnData: true,
        path: '/v1/getItem',
        inHeader: false,
        handlerType: fakeHandlerError as any as typeof myApi.getItem.handlerType,
        enableValidation: true,
        enableSerialization: true,
        params: ['app', 'ctx', 'item'],
    },
    getPetOrUser: {
        isRoute: true,
        canReturnData: true,
        path: '/v1/getPetOrUser',
        inHeader: false,
        handlerType: fakeHandlerError as any as typeof myApi.getPetOrUser.handlerType,
        enableValidation: true,
        enableSerialization: true,
        params: ['app', 'ctx', 'item'],
    },
};
